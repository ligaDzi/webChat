{"version":3,"sources":["config.js","ducks/auth.js","redux/reducer.js","redux/saga.js","redux/index.js","components/rooms/TestRoom.js","components/pages/RoomsPage.js","components/common/ErrorField.js","components/auth/SignInForm.js","components/auth/SignUpForm.js","components/pages/AuthPage.js","components/Root.js","components/routes.js","App.js","index.js"],"names":["appName","ReducerRecord","Record","user","error","loading","AUTOENTER_REQUEST","AUTOENTER_SUCCESS","AUTOENTER_ERROR","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_ERROR","SIGN_IN_REQUEST","SIGN_IN_SUCCESS","SIGN_IN_ERROR","SIGN_OUT_REQUEST","SIGN_OUT_SUCCESS","reducer","state","action","type","payload","set","autoEnterSiteSaga","fetch","response","call","json","data","put","signUpSaga","JSON","stringify","name","email","password","option","method","headers","body","reset","message","signInSaga","signOutSaga","saga","all","takeEvery","createRootReducer","combineReducers","form","formReducer","authReducer","rootSaga","authSaga","sagaMiddleware","createSagaMiddleware","rootReducer","enhancer","applyMiddleware","logger","store","createStore","window","run","TestRoom","useState","setMessage","socket","setSocket","useEffect","then","res","console","log","catch","err","io","on","greeting","onClick","emit","RoomsPage","path","exact","to","ErrorField","input","meta","errorTxt","touched","style","color","createReduxForm","reduxForm","validate","errors","emailValidator","length","handleSubmit","onSubmit","Field","component","value","mapToDispatch","signUp","signIn","decorator","connect","errTxt","autoEnterSite","isAuthenticated","routes","useRoutes","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9c9ab667.chunk.js","sourcesContent":["\r\n\r\nexport const appName = 'webSocket'","import { appName } from '../config'\r\nimport { Record } from 'immutable'\r\nimport { put, call, all, takeEvery } from 'redux-saga/effects'\r\nimport { reset } from 'redux-form'\r\n\r\n\r\n/**\r\n * Constants\r\n */\r\nexport const ReducerRecord = Record({\r\n    user: null,\r\n    error: null,\r\n    loading: false\r\n})\r\n\r\nexport const moduleName = 'auth'\r\nexport const AUTOENTER_REQUEST = `${appName}/${moduleName}/AUTOENTER_REQUEST`\r\nexport const AUTOENTER_SUCCESS = `${appName}/${moduleName}/AUTOENTER_SUCCESS`\r\nexport const AUTOENTER_ERROR = `${appName}/${moduleName}/AUTOENTER_ERROR`\r\nexport const SIGN_UP_REQUEST = `${appName}/${moduleName}/SIGN_UP_REQUEST`\r\nexport const SIGN_UP_SUCCESS = `${appName}/${moduleName}/SIGN_UP_SUCCESS`\r\nexport const SIGN_UP_ERROR = `${appName}/${moduleName}/SIGN_UP_ERROR`\r\nexport const SIGN_IN_REQUEST = `${appName}/${moduleName}/SIGN_IN_REQUEST`\r\nexport const SIGN_IN_SUCCESS = `${appName}/${moduleName}/SIGN_IN_SUCCESS`\r\nexport const SIGN_IN_ERROR = `${appName}/${moduleName}/SIGN_IN_ERROR`\r\nexport const SIGN_OUT_REQUEST = `${appName}/${moduleName}/SIGN_OUT_REQUEST`\r\nexport const SIGN_OUT_SUCCESS = `${appName}/${moduleName}/SIGN_OUT_SUCCESS`\r\n\r\n\r\n/**\r\n * Reducer\r\n */\r\nexport default function reducer(state = new ReducerRecord(), action) {\r\n\r\n    const { type, payload, error } = action\r\n\r\n    switch(type) {\r\n        case AUTOENTER_REQUEST:\r\n        case SIGN_IN_REQUEST:\r\n        case SIGN_UP_REQUEST:\r\n            return state.set('loading', true)\r\n\r\n        case AUTOENTER_SUCCESS:\r\n        case SIGN_IN_SUCCESS:\r\n        case SIGN_UP_SUCCESS:\r\n            return state\r\n                .set('loading', false)\r\n                .set('user', payload.user)\r\n                .set('error', null)\r\n\r\n        case AUTOENTER_ERROR:\r\n            return state\r\n                .set('loading', false)\r\n\r\n        case SIGN_IN_ERROR:\r\n        case SIGN_UP_ERROR:\r\n            return state\r\n                .set('loading', false)\r\n                .set('error', error)\r\n\r\n        case SIGN_OUT_SUCCESS:\r\n            return new ReducerRecord({})\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Selectors\r\n */\r\n\r\n \r\n/**\r\n * Action Creators\r\n */\r\nexport function autoEnterSite() {\r\n    return {\r\n        type: AUTOENTER_REQUEST\r\n    }\r\n}\r\n\r\nexport function signUp(name, email, password) {\r\n    return {\r\n        type: SIGN_UP_REQUEST,\r\n        payload: { name, email, password }\r\n    }\r\n}\r\n\r\nexport function signIn(email, password) {\r\n    return {\r\n        type: SIGN_IN_REQUEST,\r\n        payload: { email, password }\r\n    }\r\n}\r\n\r\nexport function signOut() {\r\n    return {\r\n        type: SIGN_OUT_REQUEST\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * Sagas\r\n */\r\nexport const autoEnterSiteSaga = function * (action) {\r\n    try {        \r\n        const response = yield fetch('/api/auth/autoenter')\r\n        const data = yield call(\r\n            [response, response.json]\r\n        )\r\n\r\n        if (data.user) {\r\n            yield put({\r\n                type: AUTOENTER_SUCCESS,\r\n                payload: { user: data.user }\r\n            }) \r\n        } else {            \r\n            yield put({\r\n                type: AUTOENTER_ERROR\r\n            }) \r\n        }\r\n    } catch (error) {\r\n        yield put({\r\n            type: AUTOENTER_ERROR\r\n        })          \r\n    }\r\n}\r\n\r\nexport const signUpSaga = function * (action) {\r\n    try {\r\n        const option = {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: yield call(\r\n                [JSON, JSON.stringify],\r\n                {\r\n                    name: action.payload.name, \r\n                    email: action.payload.email,  \r\n                    password: action.payload.password  \r\n                }\r\n            )\r\n        } \r\n\r\n        const response = yield fetch('/api/auth/register', option)\r\n        const data = yield call(\r\n            [response, response.json]\r\n        )\r\n\r\n        yield put( reset('auth') )\r\n        \r\n        if (data.user) {\r\n            yield put({\r\n                type: SIGN_UP_SUCCESS,\r\n                payload: { user: data.user }\r\n            })\r\n        } else {\r\n            yield put({\r\n                type: SIGN_UP_ERROR,\r\n                error: data.message\r\n            })\r\n        }\r\n        \r\n    } catch (error) {\r\n        yield put({\r\n            type: SIGN_UP_ERROR,\r\n            error\r\n        })        \r\n    }    \r\n}\r\n\r\nexport const signInSaga = function * (action) {\r\n    try {\r\n\r\n        const option = {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: yield call(\r\n                [JSON, JSON.stringify],\r\n                { \r\n                    email: action.payload.email,  \r\n                    password: action.payload.password  \r\n                }\r\n            )\r\n        } \r\n\r\n        const response = yield fetch('/api/auth/login', option)\r\n        const data = yield call(\r\n            [response, response.json]\r\n        )\r\n\r\n        yield put( reset('auth') )   \r\n\r\n        if (data.user) {\r\n            yield put({\r\n                type: SIGN_IN_SUCCESS,\r\n                payload: { user: data.user }\r\n            })\r\n        } else {\r\n            yield put({\r\n                type: SIGN_IN_ERROR,\r\n                error: data.message\r\n            })\r\n        }\r\n        \r\n    } catch (error) {\r\n        yield put({\r\n            type: SIGN_IN_ERROR,\r\n            error\r\n        })\r\n    }\r\n}\r\n\r\nexport const signOutSaga = function * (action) {\r\n\r\n}\r\n\r\n\r\n\r\nexport const saga = function * () {\r\n    yield all([\r\n        takeEvery(AUTOENTER_REQUEST, autoEnterSiteSaga),\r\n        takeEvery(SIGN_UP_REQUEST, signUpSaga),\r\n        takeEvery(SIGN_IN_REQUEST, signInSaga),\r\n        takeEvery(SIGN_OUT_REQUEST, signOutSaga)\r\n    ])\r\n}","import { combineReducers } from 'redux'\r\nimport { reducer as formReducer} from 'redux-form'\r\nimport authReducer, {  moduleName as authModule } from '../ducks/auth'\r\n\r\n\r\nconst createRootReducer = () => combineReducers({\r\n    form: formReducer,\r\n    [authModule]: authReducer\r\n})\r\n\r\nexport default createRootReducer","import { all } from 'redux-saga/effects'\r\nimport { saga as authSaga } from '../ducks/auth'\r\n\r\n\r\nexport default function * rootSaga() {\r\n    yield all([\r\n        authSaga()\r\n    ])\r\n}","import { createStore, applyMiddleware } from 'redux'\r\nimport createRootReducer from './reducer'\r\nimport logger from 'redux-logger'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport rootSaga from './saga'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\nconst rootReducer = createRootReducer()\r\nconst enhancer = applyMiddleware(sagaMiddleware, logger)\r\nconst store = createStore(rootReducer, enhancer)\r\n\r\nwindow.store = store\r\n\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store","import React, { useEffect, useState } from 'react'\r\nimport io from 'socket.io-client'\r\n\r\nconst TestRoom = () => {\r\n    const [message, setMessage] = useState(null)\r\n    const [socket, setSocket] = useState(null)\r\n\r\n    useEffect(() => {\r\n        fetch('/api/room/all')\r\n            .then(res => res.json())\r\n            .then(data => console.log('data', data))\r\n            .catch(err => console.error(err))\r\n\r\n        setSocket(io())\r\n        if (socket) socket.on('news', data => setMessage(data.greeting))\r\n        \r\n    }, [])\r\n\r\n    const sendMessage = message => socket.emit('greeting', { message })\r\n\r\n    return (\r\n        <div>\r\n            <h3>TestRoom</h3>\r\n            <button onClick={sendMessage}>Send</button>\r\n            { message }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TestRoom\r\n","import React from 'react'\r\nimport { Link, Route } from 'react-router-dom'\r\n\r\nimport TestRoom from '../rooms/TestRoom'\r\n\r\nconst RoomsPage = () => {\r\n    return (\r\n        <div>\r\n            <h2>RoomsPage</h2>  \r\n            <Route path='/rooms' exact>\r\n                <Link to='/rooms/test'>Test room</Link>\r\n            </Route>  \r\n            <Route path='/rooms/test' exact>\r\n                <TestRoom />\r\n            </Route>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RoomsPage","import React from 'react'\r\n\r\nconst ErrorField = ({ input, type, meta: {error, touched} }) => {\r\n\r\n    const errorTxt = touched && error && <div style={{color: 'red'}}>{ error }</div>\r\n\r\n    return (\r\n        <div>\r\n            <label>{input.name}</label>\r\n            <input {...input} type={type} />\r\n            {errorTxt}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorField\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport emailValidator from 'email-validator'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport ErrorField from '../common/ErrorField'\r\n\r\nconst SignInForm = ({ handleSubmit }) => {\r\n    return (\r\n        <div>\r\n            <h2>Sign In</h2>\r\n            <form onSubmit={ handleSubmit }>\r\n                <Field name='email' component={ErrorField} />\r\n                <Field name='password' type='passowrd' component={ErrorField} />\r\n                <Link to='/auth/register'>Registaration</Link>\r\n                <div>\r\n                    <input type='submit' value='Send' />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nSignInForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nconst validate = ({ email, password }) => {\r\n    const errors = {}\r\n\r\n    if (!email) errors.email = 'email is required'\r\n    else if (!emailValidator.validate(email)) errors.email = 'invalid email'\r\n\r\n    if (!password) errors.password = 'password is required'\r\n    else if (password.length < 6) errors.password = 'to short'\r\n\r\n    return errors\r\n}\r\n\r\nconst createReduxForm = reduxForm({ form: 'auth', validate })\r\n\r\nexport default createReduxForm(SignInForm)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { reduxForm, Field } from 'redux-form'\r\nimport emailValidator from 'email-validator'\r\n\r\nimport ErrorField from '../common/ErrorField'\r\n\r\nconst SignUpForm = ({ handleSubmit }) => {\r\n    return (\r\n        <div>\r\n            <h2>Registaration</h2>\r\n            <form onSubmit={ handleSubmit }>\r\n                <Field name='name' component={ErrorField} />\r\n                <Field name='email' component={ErrorField} />\r\n                <Field name='password' type='passowrd' component={ErrorField} />\r\n                <div>\r\n                    <input type='submit' value='Send' />\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nSignUpForm.propTypes = {\r\n    handleSubmit: PropTypes.func.isRequired\r\n}\r\n\r\nconst validate = ({ name, email, password }) => {\r\n    const errors = {}\r\n\r\n    if (!name) errors.name = 'name is required'\r\n    else if (name.length > 30) errors.name = 'name to big'\r\n\r\n    if (!email) errors.email = 'email is required'\r\n    else if (!emailValidator.validate(email)) errors.email = 'invalid email'\r\n\r\n    if (!password) errors.password = 'password is required'\r\n    else if (password.length < 6) errors.password = 'password to short'\r\n\r\n    return errors\r\n}\r\n\r\nconst createReduxForm = reduxForm({ form: 'auth', validate })\r\n\r\nexport default createReduxForm(SignUpForm)\r\n","import React, { useEffect } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Route } from 'react-router-dom'\r\n\r\nimport { signUp, signIn, moduleName } from '../../ducks/auth'\r\n\r\nimport SignInForm from '../auth/SignInForm'\r\nimport SignUpForm from '../auth/SignUpForm'\r\n\r\n\r\nconst AuthPage = ({ user, error, signUp, signIn }) => {\r\n\r\n\r\n    const handleSignIn = ({ email, password }) => signIn(email, password)\r\n    const handleSignUp = ({ name, email, password }) => signUp(name, email, password)\r\n    \r\n    const errTxt = error && `Error: ${error}`\r\n\r\n    return (\r\n        <div>\r\n            <h2>AuthPage</h2>\r\n            <p style={{color: 'red'}}>{ errTxt }</p>            \r\n            <Route  path='/auth/login' exact>\r\n                <SignInForm onSubmit={ handleSignIn } />\r\n            </Route>            \r\n            <Route  path='/auth/register' exact>\r\n                <SignUpForm onSubmit={ handleSignUp } />\r\n            </Route>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nAuthPage.propTypes = {\r\n    user: PropTypes.object,\r\n    error: PropTypes.string,\r\n    signUp: PropTypes.func.isRequired,\r\n    signIn: PropTypes.func.isRequired\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state[moduleName].user,\r\n        error: state[moduleName].error\r\n    }\r\n}\r\n\r\nconst mapToDispatch = {\r\n    signUp,\r\n    signIn\r\n}\r\n\r\nconst decorator = connect(mapStateToProps, mapToDispatch);\r\n\r\nexport default decorator(AuthPage)\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\nimport { useRoutes } from './routes'\r\nimport { autoEnterSite, moduleName } from '../ducks/auth'\r\n\r\nconst Root = ({ user, autoEnterSite }) => {\r\n    \r\n    useEffect(() => {\r\n        autoEnterSite()\r\n    }, [])\r\n\r\n    const isAuthenticated = !!user\r\n\r\n    console.log('isAuthenticated', isAuthenticated)\r\n\r\n    const routes = useRoutes(isAuthenticated)\r\n    return (\r\n        <Router>\r\n            <div>\r\n                { routes }\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default connect((state) => ({    \r\n    user: state[moduleName].user\r\n}), {\r\n    autoEnterSite\r\n})(Root)\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\n\r\nimport RoomsPage from './pages/RoomsPage'\r\nimport AuthPage from './pages/AuthPage'\r\n\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route  path='/rooms'>\r\n                    <RoomsPage />\r\n                </Route>\r\n                <Redirect to='/rooms' />                \r\n            </Switch>\r\n        )\r\n    }\r\n    return (\r\n        <Switch>\r\n            <Route path='/auth'>\r\n                <AuthPage />\r\n            </Route>\r\n            <Redirect to='/auth/login' />\r\n        </Switch>\r\n    )\r\n}","import React from 'react'\r\nimport store from './redux'\r\nimport { Provider } from 'react-redux'\r\n\r\nimport Root from './components/Root'\r\n\r\nfunction App() {\r\n    return (\r\n        <Provider store = { store }>\r\n            <Root />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}